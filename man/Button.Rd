% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Button-generated.R, R/IntSlider.R
\name{Button}
\alias{Button}
\alias{jupyter.widget.IntSlider}
\title{Button widget}
\usage{
Button(
  button_style = "",
  description = "",
  disabled = FALSE,
  icon = "",
  style = ButtonStyle(),
  ...,
  error_call = current_env()
)
}
\arguments{
\item{button_style}{Use a predefined styling for the button.}

\item{description}{Button label.}

\item{disabled}{Enable or disable user changes.}

\item{icon}{Font-awesome icon names, without the 'fa-' prefix.}

\item{style}{Must inherit from \link{jupyter.widget.ButtonStyle}.}

\item{...}{forwarded to \link[jupyter.widgets.base:DOMWidget]{jupyter.widgets.base::jupyter.widget.DOMWidget} constructor}

\item{error_call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\description{
Button widget

Button widget

Button widget
}
\section{Super classes}{
\code{\link[jupyter.widgets.base:jupyter.widget.Widget]{jupyter.widgets.base::jupyter.widget.Widget}} -> \code{\link[jupyter.widgets.base:jupyter.widget.DOMWidget]{jupyter.widgets.base::jupyter.widget.DOMWidget}} -> \code{jupyter.widget.IntSlider}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{min}}{min value}

\item{\code{max}}{max value}

\item{\code{value}}{value}

\item{\code{step}}{step}

\item{\code{continuous_update}}{continuous update}

\item{\code{description}}{description}

\item{\code{description_allow_html}}{description_allow_html}

\item{\code{disabled}}{disabled}

\item{\code{orientation}}{orientation}

\item{\code{readout}}{readout}

\item{\code{readout_format}}{readout format}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-jupyter.widget.IntSlider-new}{\code{jupyter.widget.IntSlider$new()}}
\item \href{#method-jupyter.widget.IntSlider-clone}{\code{jupyter.widget.IntSlider$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="jupyter.widgets.base" data-topic="jupyter.widget.Widget" data-id="check_state"><a href='../../jupyter.widgets.base/html/jupyter.widget.Widget.html#method-jupyter.widget.Widget-check_state'><code>jupyter.widgets.base::jupyter.widget.Widget$check_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jupyter.widgets.base" data-topic="jupyter.widget.Widget" data-id="on"><a href='../../jupyter.widgets.base/html/jupyter.widget.Widget.html#method-jupyter.widget.Widget-on'><code>jupyter.widgets.base::jupyter.widget.Widget$on()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jupyter.widgets.base" data-topic="jupyter.widget.Widget" data-id="state"><a href='../../jupyter.widgets.base/html/jupyter.widget.Widget.html#method-jupyter.widget.Widget-state'><code>jupyter.widgets.base::jupyter.widget.Widget$state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jupyter.widgets.base" data-topic="jupyter.widget.Widget" data-id="update"><a href='../../jupyter.widgets.base/html/jupyter.widget.Widget.html#method-jupyter.widget.Widget-update'><code>jupyter.widgets.base::jupyter.widget.Widget$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jupyter.widgets.base" data-topic="jupyter.widget.DOMWidget" data-id="mime_bundle"><a href='../../jupyter.widgets.base/html/jupyter.widget.DOMWidget.html#method-jupyter.widget.DOMWidget-mime_bundle'><code>jupyter.widgets.base::jupyter.widget.DOMWidget$mime_bundle()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.IntSlider-new"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.IntSlider-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.IntSlider$new(
  min = 0,
  max = 100,
  value = 0,
  step = 1,
  continuous_update = TRUE,
  description = "",
  description_allow_html = FALSE,
  disabled = FALSE,
  orientation = "horizontal",
  readout = TRUE,
  readout_format = "d",
  style = IntSliderStyle(),
  ...,
  error_call = caller_env()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{min}}{minimum value for the slider}

\item{\code{max}}{maximum value for the slider}

\item{\code{value}}{initial value}

\item{\code{step}}{step}

\item{\code{continuous_update}}{if TRUE (default) the value updates as the slider is dragged, otherwise only when released}

\item{\code{description}}{descrption}

\item{\code{description_allow_html}}{whether the description allows html}

\item{\code{disabled}}{TRUE if the slider is disabled}

\item{\code{orientation}}{"horizontal" (default) or "vertical"}

\item{\code{readout}}{the value is displayed next to the slider if TRUE}

\item{\code{readout_format}}{with this format, e.g. ".2f"}

\item{\code{style}}{inherited from \link[jupyter.widgets.base:DOMWidget]{jupyter.widgets.base::DOMWidget}. Must be a \link{jupyter.widget.IntSliderStyle} object.}

\item{\code{...}}{forwarded to \link[jupyter.widgets.base:DOMWidget]{jupyter.widgets.base::jupyter.widget.DOMWidget} constructor}

\item{\code{error_call}}{see \code{\link[rlang:args_error_context]{rlang::args_error_context()}}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new \code{jupyter.widget.IntSlider} widget
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jupyter.widget.IntSlider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-jupyter.widget.IntSlider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{jupyter.widget.IntSlider$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
